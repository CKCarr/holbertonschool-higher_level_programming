===================================
module ''5-text_indentation''
===================================

test function ''text_indentation''
-----------------------------------


#  ''first import module function''
>>> text_indentation = __import__('5-text_indentation').text_indentation


1. all the info string
>>> text_indentation("Prototype: def text_indentation(text): text must be a string,?, otherwise: raise: a TypeError: exception. with the message? text must be a string. There should be no. space. at the beginning: or at the end: of each printed line. You are not? allowed? to import: any module.")
Prototype:
<BLANKLINE>
def text_indentation(text):
<BLANKLINE>
text must be a string,?
<BLANKLINE>
, otherwise:
<BLANKLINE>
raise:
<BLANKLINE>
a TypeError:
<BLANKLINE>
exception.
<BLANKLINE>
with the message?
<BLANKLINE>
text must be a string.
<BLANKLINE>
There should be no.
<BLANKLINE>
space.
<BLANKLINE>
at the beginning:
<BLANKLINE>
or at the end:
<BLANKLINE>
of each printed line.
<BLANKLINE>
You are not?
<BLANKLINE>
allowed?
<BLANKLINE>
to import:
<BLANKLINE>
any module.
<BLANKLINE>


2. no info
>>> text_indentation()
Traceback (most recent call last):
...
TypeError: text_indentation() missing 1 required positional argument: 'text'

3. ints
text_indentation(123)
Traceback (most recent call last):
...
TypeError: text must be a string

4. list
>>> text_indentation([1, 2, 3])
Traceback (most recent call last):
...
TypeError: text must be a string

5. many params
>>> text_indentation(1, 2, 3)
Traceback (most recent call last):
...
TypeError: text_indentation() takes 1 positional argument but 3 were given

6. int, string
>>> text_indentation(3, "strings.in:here?")
Traceback (most recent call last):
...
TypeError: text_indentation() takes 1 positional argument but 2 were given

7. str, int
. int, string
>>> text_indentation("strings.in:here?", 3)
Traceback (most recent call last):
...
TypeError: text_indentation() takes 1 positional argument but 2 were given


8. string quotes equal string
>>> text_indentation(".1""2."'3.4:5?')
.
<BLANKLINE>
12.
<BLANKLINE>
3.
<BLANKLINE>
4:
<BLANKLINE>
5?
<BLANKLINE>


9. holberton school
>>> text_indentation("Holberton. School? How are you: John")
Holberton.
<BLANKLINE>
School?
<BLANKLINE>
How are you:
<BLANKLINE>
John
